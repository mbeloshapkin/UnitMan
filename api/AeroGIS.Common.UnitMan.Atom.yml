### YamlMime:ManagedReference
items:
- uid: AeroGIS.Common.UnitMan.Atom
  commentId: T:AeroGIS.Common.UnitMan.Atom
  id: UnitMan.Atom
  parent: AeroGIS.Common
  children:
  - AeroGIS.Common.UnitMan.Atom.#ctor(System.String,System.Int32)
  - AeroGIS.Common.UnitMan.Atom.Abs(System.Int32)
  - AeroGIS.Common.UnitMan.Atom.Abs(System.String)
  - AeroGIS.Common.UnitMan.Atom.AtomicUOM
  - AeroGIS.Common.UnitMan.Atom.CompareTo(AeroGIS.Common.UnitMan.Atom)
  - AeroGIS.Common.UnitMan.Atom.Exponent
  - AeroGIS.Common.UnitMan.Atom.Neg
  - AeroGIS.Common.UnitMan.Atom.Signature
  langs:
  - csharp
  - vb
  name: UnitMan.Atom
  nameWithType: UnitMan.Atom
  fullName: AeroGIS.Common.UnitMan.Atom
  type: Class
  source:
    id: Atom
    path: ''
    startLine: 395
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  summary: "\nAtomic UOM\n"
  example: []
  syntax:
    content: 'protected class Atom : IComparable<UnitMan.Atom>'
    content.vb: >-
      Protected Class Atom
          Implements IComparable(Of UnitMan.Atom)
  inheritance:
  - System.Object
  implements:
  - System.IComparable{AeroGIS.Common.UnitMan.Atom}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - protected
  - class
  modifiers.vb:
  - Protected
  - Class
- uid: AeroGIS.Common.UnitMan.Atom.AtomicUOM
  commentId: F:AeroGIS.Common.UnitMan.Atom.AtomicUOM
  id: AtomicUOM
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: AtomicUOM
  nameWithType: UnitMan.Atom.AtomicUOM
  fullName: AeroGIS.Common.UnitMan.Atom.AtomicUOM
  type: Field
  source:
    id: AtomicUOM
    path: ''
    startLine: 400
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  summary: "\nText label\n"
  example: []
  syntax:
    content: public string AtomicUOM
    return:
      type: System.String
    content.vb: Public AtomicUOM As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AeroGIS.Common.UnitMan.Atom.Exponent
  commentId: F:AeroGIS.Common.UnitMan.Atom.Exponent
  id: Exponent
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Exponent
  nameWithType: UnitMan.Atom.Exponent
  fullName: AeroGIS.Common.UnitMan.Atom.Exponent
  type: Field
  source:
    id: Exponent
    path: ''
    startLine: 404
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  summary: "\nSigned exponent of UOM in range 1..9. In practice exponents larger than 4 appears rarely.\n"
  example: []
  syntax:
    content: public int Exponent
    return:
      type: System.Int32
    content.vb: Public Exponent As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AeroGIS.Common.UnitMan.Atom.Signature
  commentId: P:AeroGIS.Common.UnitMan.Atom.Signature
  id: Signature
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: UnitMan.Atom.Signature
  fullName: AeroGIS.Common.UnitMan.Atom.Signature
  type: Property
  source:
    id: Signature
    path: ''
    startLine: 408
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  summary: "\nAtomic UOM signature\n"
  example: []
  syntax:
    content: public string Signature { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Signature As String
  overload: AeroGIS.Common.UnitMan.Atom.Signature*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: AeroGIS.Common.UnitMan.Atom.#ctor(System.String,System.Int32)
  commentId: M:AeroGIS.Common.UnitMan.Atom.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Atom(String, Int32)
  nameWithType: UnitMan.Atom.Atom(String, Int32)
  fullName: AeroGIS.Common.UnitMan.Atom.Atom(System.String, System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 410
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  syntax:
    content: public Atom(string AnAtomicUOM, int APower)
    parameters:
    - id: AnAtomicUOM
      type: System.String
    - id: APower
      type: System.Int32
    content.vb: Public Sub New(AnAtomicUOM As String, APower As Integer)
  overload: AeroGIS.Common.UnitMan.Atom.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AeroGIS.Common.UnitMan.Atom.CompareTo(AeroGIS.Common.UnitMan.Atom)
  commentId: M:AeroGIS.Common.UnitMan.Atom.CompareTo(AeroGIS.Common.UnitMan.Atom)
  id: CompareTo(AeroGIS.Common.UnitMan.Atom)
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: CompareTo(UnitMan.Atom)
  nameWithType: UnitMan.Atom.CompareTo(UnitMan.Atom)
  fullName: AeroGIS.Common.UnitMan.Atom.CompareTo(AeroGIS.Common.UnitMan.Atom)
  type: Method
  source:
    id: CompareTo
    path: ''
    startLine: 415
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  summary: "\nSort order for atoms is: positive powers sorted by alphabet, negative powers sorted by alphabet.\nThat provides the unique signatures for automatically composed UOMs.\n"
  example: []
  syntax:
    content: public int CompareTo(UnitMan.Atom other)
    parameters:
    - id: other
      type: AeroGIS.Common.UnitMan.Atom
    return:
      type: System.Int32
    content.vb: Public Function CompareTo(other As UnitMan.Atom) As Integer
  overload: AeroGIS.Common.UnitMan.Atom.CompareTo*
  implements:
  - System.IComparable{AeroGIS.Common.UnitMan.Atom}.CompareTo(AeroGIS.Common.UnitMan.Atom)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AeroGIS.Common.UnitMan.Atom.Neg
  commentId: M:AeroGIS.Common.UnitMan.Atom.Neg
  id: Neg
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Neg()
  nameWithType: UnitMan.Atom.Neg()
  fullName: AeroGIS.Common.UnitMan.Atom.Neg()
  type: Method
  source:
    id: Neg
    path: ''
    startLine: 421
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  syntax:
    content: public void Neg()
    content.vb: Public Sub Neg
  overload: AeroGIS.Common.UnitMan.Atom.Neg*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: AeroGIS.Common.UnitMan.Atom.Abs(System.Int32)
  commentId: M:AeroGIS.Common.UnitMan.Atom.Abs(System.Int32)
  id: Abs(System.Int32)
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Abs(Int32)
  nameWithType: UnitMan.Atom.Abs(Int32)
  fullName: AeroGIS.Common.UnitMan.Atom.Abs(System.Int32)
  type: Method
  source:
    id: Abs
    path: ''
    startLine: 423
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  syntax:
    content: public static int Abs(int AnExponent)
    parameters:
    - id: AnExponent
      type: System.Int32
    return:
      type: System.Int32
    content.vb: Public Shared Function Abs(AnExponent As Integer) As Integer
  overload: AeroGIS.Common.UnitMan.Atom.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: AeroGIS.Common.UnitMan.Atom.Abs(System.String)
  commentId: M:AeroGIS.Common.UnitMan.Atom.Abs(System.String)
  id: Abs(System.String)
  parent: AeroGIS.Common.UnitMan.Atom
  langs:
  - csharp
  - vb
  name: Abs(String)
  nameWithType: UnitMan.Atom.Abs(String)
  fullName: AeroGIS.Common.UnitMan.Atom.Abs(System.String)
  type: Method
  source:
    id: Abs
    path: ''
    startLine: 424
  assemblies:
  - cs.temp.dll
  namespace: AeroGIS.Common
  syntax:
    content: public static string Abs(string ASignature)
    parameters:
    - id: ASignature
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function Abs(ASignature As String) As String
  overload: AeroGIS.Common.UnitMan.Atom.Abs*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: AeroGIS.Common
  commentId: N:AeroGIS.Common
  isExternal: false
  name: AeroGIS.Common
  nameWithType: AeroGIS.Common
  fullName: AeroGIS.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IComparable{AeroGIS.Common.UnitMan.Atom}
  commentId: T:System.IComparable{AeroGIS.Common.UnitMan.Atom}
  parent: System
  definition: System.IComparable`1
  name: IComparable<UnitMan.Atom>
  nameWithType: IComparable<UnitMan.Atom>
  fullName: System.IComparable<AeroGIS.Common.UnitMan.Atom>
  nameWithType.vb: IComparable(Of UnitMan.Atom)
  fullName.vb: System.IComparable(Of AeroGIS.Common.UnitMan.Atom)
  name.vb: IComparable(Of UnitMan.Atom)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: AeroGIS.Common.UnitMan.Atom
    name: UnitMan.Atom
    nameWithType: UnitMan.Atom
    fullName: AeroGIS.Common.UnitMan.Atom
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: AeroGIS.Common.UnitMan.Atom
    name: UnitMan.Atom
    nameWithType: UnitMan.Atom
    fullName: AeroGIS.Common.UnitMan.Atom
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IComparable`1
  commentId: T:System.IComparable`1
  isExternal: true
  name: IComparable<T>
  nameWithType: IComparable<T>
  fullName: System.IComparable<T>
  nameWithType.vb: IComparable(Of T)
  fullName.vb: System.IComparable(Of T)
  name.vb: IComparable(Of T)
  spec.csharp:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IComparable`1
    name: IComparable
    nameWithType: IComparable
    fullName: System.IComparable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: AeroGIS.Common.UnitMan.Atom.Signature*
  commentId: Overload:AeroGIS.Common.UnitMan.Atom.Signature
  isExternal: false
  name: Signature
  nameWithType: UnitMan.Atom.Signature
  fullName: AeroGIS.Common.UnitMan.Atom.Signature
- uid: AeroGIS.Common.UnitMan.Atom.#ctor*
  commentId: Overload:AeroGIS.Common.UnitMan.Atom.#ctor
  isExternal: false
  name: Atom
  nameWithType: UnitMan.Atom.Atom
  fullName: AeroGIS.Common.UnitMan.Atom.Atom
- uid: AeroGIS.Common.UnitMan.Atom.CompareTo*
  commentId: Overload:AeroGIS.Common.UnitMan.Atom.CompareTo
  isExternal: false
  name: CompareTo
  nameWithType: UnitMan.Atom.CompareTo
  fullName: AeroGIS.Common.UnitMan.Atom.CompareTo
- uid: System.IComparable{AeroGIS.Common.UnitMan.Atom}.CompareTo(AeroGIS.Common.UnitMan.Atom)
  commentId: M:System.IComparable{AeroGIS.Common.UnitMan.Atom}.CompareTo(AeroGIS.Common.UnitMan.Atom)
  parent: System.IComparable{AeroGIS.Common.UnitMan.Atom}
  definition: System.IComparable`1.CompareTo(`0)
  name: CompareTo(UnitMan.Atom)
  nameWithType: IComparable<UnitMan.Atom>.CompareTo(UnitMan.Atom)
  fullName: System.IComparable<AeroGIS.Common.UnitMan.Atom>.CompareTo(AeroGIS.Common.UnitMan.Atom)
  nameWithType.vb: IComparable(Of UnitMan.Atom).CompareTo(UnitMan.Atom)
  fullName.vb: System.IComparable(Of AeroGIS.Common.UnitMan.Atom).CompareTo(AeroGIS.Common.UnitMan.Atom)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<UnitMan.Atom>.CompareTo
    fullName: System.IComparable<AeroGIS.Common.UnitMan.Atom>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AeroGIS.Common.UnitMan.Atom
    name: UnitMan.Atom
    nameWithType: UnitMan.Atom
    fullName: AeroGIS.Common.UnitMan.Atom
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of UnitMan.Atom).CompareTo
    fullName: System.IComparable(Of AeroGIS.Common.UnitMan.Atom).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: AeroGIS.Common.UnitMan.Atom
    name: UnitMan.Atom
    nameWithType: UnitMan.Atom
    fullName: AeroGIS.Common.UnitMan.Atom
  - name: )
    nameWithType: )
    fullName: )
- uid: AeroGIS.Common.UnitMan.Atom
  commentId: T:AeroGIS.Common.UnitMan.Atom
  parent: AeroGIS.Common
  isExternal: false
  name: UnitMan.Atom
  nameWithType: UnitMan.Atom
  fullName: AeroGIS.Common.UnitMan.Atom
- uid: System.IComparable`1.CompareTo(`0)
  commentId: M:System.IComparable`1.CompareTo(`0)
  isExternal: true
  name: CompareTo(T)
  nameWithType: IComparable<T>.CompareTo(T)
  fullName: System.IComparable<T>.CompareTo(T)
  nameWithType.vb: IComparable(Of T).CompareTo(T)
  fullName.vb: System.IComparable(Of T).CompareTo(T)
  spec.csharp:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable<T>.CompareTo
    fullName: System.IComparable<T>.CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IComparable`1.CompareTo(`0)
    name: CompareTo
    nameWithType: IComparable(Of T).CompareTo
    fullName: System.IComparable(Of T).CompareTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: AeroGIS.Common.UnitMan.Atom.Neg*
  commentId: Overload:AeroGIS.Common.UnitMan.Atom.Neg
  isExternal: false
  name: Neg
  nameWithType: UnitMan.Atom.Neg
  fullName: AeroGIS.Common.UnitMan.Atom.Neg
- uid: AeroGIS.Common.UnitMan.Atom.Abs*
  commentId: Overload:AeroGIS.Common.UnitMan.Atom.Abs
  isExternal: false
  name: Abs
  nameWithType: UnitMan.Atom.Abs
  fullName: AeroGIS.Common.UnitMan.Atom.Abs
